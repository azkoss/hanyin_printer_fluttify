// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:hanyin_printer_fluttify/src/ios/ios.export.g.dart';
import 'package:hanyin_printer_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class com_getkeepsafe_relinker_elf_Elf_ProgramHeader extends java_lang_Object  {
  //region constants
  static final int PT_LOAD = 1;
  static final int PT_DYNAMIC = 2;
  //endregion

  //region creators
  
  //endregion

  //region getters
  Future<int> get_type() async {
    final result = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod("com.getkeepsafe.relinker.elf.Elf.ProgramHeader::get_type", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_offset() async {
    final result = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod("com.getkeepsafe.relinker.elf.Elf.ProgramHeader::get_offset", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_vaddr() async {
    final result = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod("com.getkeepsafe.relinker.elf.Elf.ProgramHeader::get_vaddr", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_memsz() async {
    final result = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod("com.getkeepsafe.relinker.elf.Elf.ProgramHeader::get_memsz", {'refId': refId});
  
    return result;
  }
  
  //endregion

  //region setters
  Future<void> set_type(int type) async {
    await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('com.getkeepsafe.relinker.elf.Elf.ProgramHeader::set_type', {'refId': refId, "type": type});
  
  
  }
  
  Future<void> set_offset(int offset) async {
    await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('com.getkeepsafe.relinker.elf.Elf.ProgramHeader::set_offset', {'refId': refId, "offset": offset});
  
  
  }
  
  Future<void> set_vaddr(int vaddr) async {
    await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('com.getkeepsafe.relinker.elf.Elf.ProgramHeader::set_vaddr', {'refId': refId, "vaddr": vaddr});
  
  
  }
  
  Future<void> set_memsz(int memsz) async {
    await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('com.getkeepsafe.relinker.elf.Elf.ProgramHeader::set_memsz', {'refId': refId, "memsz": memsz});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}

extension com_getkeepsafe_relinker_elf_Elf_ProgramHeader_Batch on List<com_getkeepsafe_relinker_elf_Elf_ProgramHeader> {
  //region getters
  Future<List<int>> get_type_batch() async {
    final resultBatch = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod("com.getkeepsafe.relinker.elf.Elf.ProgramHeader::get_type_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_offset_batch() async {
    final resultBatch = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod("com.getkeepsafe.relinker.elf.Elf.ProgramHeader::get_offset_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_vaddr_batch() async {
    final resultBatch = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod("com.getkeepsafe.relinker.elf.Elf.ProgramHeader::get_vaddr_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_memsz_batch() async {
    final resultBatch = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod("com.getkeepsafe.relinker.elf.Elf.ProgramHeader::get_memsz_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  //endregion

  //region methods
  
  //endregion
}