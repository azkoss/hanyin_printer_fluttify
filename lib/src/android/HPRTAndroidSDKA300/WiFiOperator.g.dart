// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:hanyin_printer_fluttify/src/ios/ios.export.g.dart';
import 'package:hanyin_printer_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

class HPRTAndroidSDKA300_WiFiOperator extends java_lang_Object with HPRTAndroidSDKA300_IPort {
  //region constants
  
  //endregion

  //region creators
  static Future<HPRTAndroidSDKA300_WiFiOperator> create__android_content_Context(android_content_Context var1) async {
    final int refId = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('ObjectFactory::createHPRTAndroidSDKA300_WiFiOperator__android_content_Context', {"var1": var1.refId});
    final object = HPRTAndroidSDKA300_WiFiOperator()..refId = refId..tag = 'hanyin_printer_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<HPRTAndroidSDKA300_WiFiOperator> create__android_content_Context__String(android_content_Context var1, String var2) async {
    final int refId = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('ObjectFactory::createHPRTAndroidSDKA300_WiFiOperator__android_content_Context__String', {"var1": var1.refId, "var2": var2});
    final object = HPRTAndroidSDKA300_WiFiOperator()..refId = refId..tag = 'hanyin_printer_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<HPRTAndroidSDKA300_WiFiOperator>> create_batch__android_content_Context(List<android_content_Context> var1) async {
    // if (#__check_param_size__#) {
    //   return Future.error('all args must has same length!');
    // }
    final List resultBatch = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('ObjectFactory::create_batchHPRTAndroidSDKA300_WiFiOperator__android_content_Context', [for (int i = 0; i < var1.length; i++) {"var1": var1[i].refId}]);
  
    final List<HPRTAndroidSDKA300_WiFiOperator> typedResult = resultBatch.map((result) => HPRTAndroidSDKA300_WiFiOperator()..refId = result..tag = 'hanyin_printer_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  static Future<List<HPRTAndroidSDKA300_WiFiOperator>> create_batch__android_content_Context__String(List<android_content_Context> var1, List<String> var2) async {
    // if (#__check_param_size__#) {
    //   return Future.error('all args must has same length!');
    // }
    final List resultBatch = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('ObjectFactory::create_batchHPRTAndroidSDKA300_WiFiOperator__android_content_Context__String', [for (int i = 0; i < var1.length; i++) {"var1": var1[i].refId, "var2": var2[i]}]);
  
    final List<HPRTAndroidSDKA300_WiFiOperator> typedResult = resultBatch.map((result) => HPRTAndroidSDKA300_WiFiOperator()..refId = result..tag = 'hanyin_printer_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  //endregion
}

extension HPRTAndroidSDKA300_WiFiOperator_Batch on List<HPRTAndroidSDKA300_WiFiOperator> {
  //region getters
  
  //endregion

  //region methods
  
  //endregion
}