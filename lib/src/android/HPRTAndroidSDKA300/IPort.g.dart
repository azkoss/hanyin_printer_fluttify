// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:hanyin_printer_fluttify/src/ios/ios.export.g.dart';
import 'package:hanyin_printer_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

mixin HPRTAndroidSDKA300_IPort on java_lang_Object {
  

  

  

  @mustCallSuper
  Future<void> IsBLEType(bool var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('IsBLEType::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> SetReadTimeout(int var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('SetReadTimeout::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> SetWriteTimeout(int var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('SetWriteTimeout::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> InitPort() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('InitPort::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<int> OpenPort__String(String var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('OpenPort__String::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<bool> OpenPort__String__String(String var1, String var2) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('OpenPort__String__String::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<bool> ClosePort() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('ClosePort::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<int> WriteData__Uint8List(Uint8List var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('WriteData__Uint8List::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<int> WriteData__Uint8List__int(Uint8List var1, int var2) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('WriteData__Uint8List__int::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<int> WriteData__Uint8List__int__int(Uint8List var1, int var2, int var3) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('WriteData__Uint8List__int__int::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<Uint8List> ReadData(int var1) {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('ReadData::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<bool> IsOpen() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('IsOpen::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<String> GetPortType() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('GetPortType::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<String> GetPrinterName() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('GetPrinterName::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<String> GetPrinterModel() {
  
  
    if (fluttifyLogEnabled) {
      debugPrint('GetPrinterModel::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
}