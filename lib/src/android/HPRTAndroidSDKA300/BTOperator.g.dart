// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:hanyin_printer_fluttify/src/ios/ios.export.g.dart';
import 'package:hanyin_printer_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class HPRTAndroidSDKA300_BTOperator extends java_lang_Object with HPRTAndroidSDKA300_IPort {
  //region constants
  
  //endregion

  //region creators
  static Future<HPRTAndroidSDKA300_BTOperator> create__android_content_Context(android_content_Context var1) async {
    final int refId = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('ObjectFactory::createHPRTAndroidSDKA300_BTOperator__android_content_Context', {"var1": var1.refId});
    final object = HPRTAndroidSDKA300_BTOperator()..refId = refId..tag = 'hanyin_printer_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<HPRTAndroidSDKA300_BTOperator> create__android_content_Context__String(android_content_Context var1, String var2) async {
    final int refId = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('ObjectFactory::createHPRTAndroidSDKA300_BTOperator__android_content_Context__String', {"var1": var1.refId, "var2": var2});
    final object = HPRTAndroidSDKA300_BTOperator()..refId = refId..tag = 'hanyin_printer_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<HPRTAndroidSDKA300_BTOperator>> create_batch__android_content_Context(List<android_content_Context> var1) async {
    // if (#__check_param_size__#) {
    //   return Future.error('all args must has same length!');
    // }
    final List resultBatch = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('ObjectFactory::create_batchHPRTAndroidSDKA300_BTOperator__android_content_Context', [for (int i = 0; i < var1.length; i++) {"var1": var1[i].refId}]);
  
    final List<HPRTAndroidSDKA300_BTOperator> typedResult = resultBatch.map((result) => HPRTAndroidSDKA300_BTOperator()..refId = result..tag = 'hanyin_printer_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  static Future<List<HPRTAndroidSDKA300_BTOperator>> create_batch__android_content_Context__String(List<android_content_Context> var1, List<String> var2) async {
    // if (#__check_param_size__#) {
    //   return Future.error('all args must has same length!');
    // }
    final List resultBatch = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('ObjectFactory::create_batchHPRTAndroidSDKA300_BTOperator__android_content_Context__String', [for (int i = 0; i < var1.length; i++) {"var1": var1[i].refId, "var2": var2[i]}]);
  
    final List<HPRTAndroidSDKA300_BTOperator> typedResult = resultBatch.map((result) => HPRTAndroidSDKA300_BTOperator()..refId = result..tag = 'hanyin_printer_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  Future<int> Readdata(Uint8List var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: HPRTAndroidSDKA300.BTOperator@$refId::Readdata([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('HPRTAndroidSDKA300.BTOperator::Readdata', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  //endregion
}

extension HPRTAndroidSDKA300_BTOperator_Batch on List<HPRTAndroidSDKA300_BTOperator> {
  //region getters
  
  //endregion

  //region methods
  Future<List<int>> Readdata_batch(List<Uint8List> var1) async {
    // print log
    // if (fluttifyLogEnabled) {
    //   #__log__#
    // }
  
    // invoke native method
    final resultBatch = await MethodChannel('me.yohom/hanyin_printer_fluttify').invokeMethod('HPRTAndroidSDKA300.BTOperator::Readdata_batch', [for (int i = 0; i < this.length; i++) {"var1": var1[i], "refId": this[i].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).map((result) => result).toList();
    
      return typedResult;
    }
  }
  
  //endregion
}