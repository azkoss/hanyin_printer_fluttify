//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.hanyin_printer_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.hanyin_printer_fluttify.HanyinPrinterFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler1 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_set_bar_code_width_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_set_bar_code_width_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_set_bar_code_width_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_start_macro_definition_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_start_macro_definition_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_start_macro_definition_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_execute_macro_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte var4 = (byte) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int var6 = (int) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int[] var7 = (int[]) ((Map<String, Object>) args).get("var7");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_execute_macro_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_execute_macro_wrap(var1, var2, var3, var4, var5, var6, var7);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_return_home_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_return_home_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_return_home_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_unidirectional_print_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_unidirectional_print_mode_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_unidirectional_print_mode_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_partial_cut_one_point_left_uncut_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_partial_cut_one_point_left_uncut_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_partial_cut_one_point_left_uncut_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_partial_cut_three_point_left_uncut_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_partial_cut_three_point_left_uncut_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_partial_cut_three_point_left_uncut_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_cut_mode_and_cut_paper_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_cut_mode_and_cut_paper_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_cut_mode_and_cut_paper_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_cut_mode_and_feed_paper_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_cut_mode_and_feed_paper_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_cut_mode_and_feed_paper_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_send_real_time_request_to_printer_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_send_real_time_request_to_printer_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_send_real_time_request_to_printer_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_generate_pulse_in_real_time_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_generate_pulse_in_real_time_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_generate_pulse_in_real_time_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_execute_power_off_sequence_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_execute_power_off_sequence_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_execute_power_off_sequence_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_transmit_specified_status_in_real_time_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_transmit_specified_status_in_real_time_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_transmit_specified_status_in_real_time_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_clear_buffer_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_clear_buffer_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_clear_buffer_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_beep_integrated_beeper_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte var4 = (byte) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int var6 = (int) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int[] var7 = (int[]) ((Map<String, Object>) args).get("var7");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_beep_integrated_beeper_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_beep_integrated_beeper_wrap(var1, var2, var3, var4, var5, var6, var7);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_peripheral_device_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_peripheral_device_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_peripheral_device_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_execute_test_print_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_execute_test_print_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_execute_test_print_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_enable_real_time_command_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte var4 = (byte) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int var6 = (int) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int[] var7 = (int[]) ((Map<String, Object>) args).get("var7");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_enable_real_time_command_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_enable_real_time_command_wrap(var1, var2, var3, var4, var5, var6, var7);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_initialize_printer_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_initialize_printer_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_initialize_printer_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_page_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_page_mode_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_page_mode_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_standard_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_standard_mode_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_standard_mode_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_generate_pulse_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte var4 = (byte) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int var6 = (int) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int[] var7 = (int[]) ((Map<String, Object>) args).get("var7");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_generate_pulse_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_generate_pulse_wrap(var1, var2, var3, var4, var5, var6, var7);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_the_print_control_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_the_print_control_mode_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_the_print_control_mode_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_the_print_density_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_the_print_density_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_the_print_density_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_the_print_speed_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_the_print_speed_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_the_print_speed_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_the_number_of_parts_for_the_thermal_head_energizing_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_the_number_of_parts_for_the_thermal_head_energizing_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_the_number_of_parts_for_the_thermal_head_energizing_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_draw_line_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_draw_line_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_draw_line_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_draw_rectangle_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_draw_rectangle_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_draw_rectangle_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_transmit_printer_id_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_transmit_printer_id_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_transmit_printer_id_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_set_bt_name_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_set_bt_name_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_set_bt_name_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_set_horizontal_and_vertical_motion_units_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_set_horizontal_and_vertical_motion_units_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_set_horizontal_and_vertical_motion_units_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_write_to_nv_user_memory_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int var7 = (int) ((Map<String, Object>) args).get("var7");
                // jsonable arg
                int[] var8 = (int[]) ((Map<String, Object>) args).get("var8");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_write_to_nv_user_memory_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_write_to_nv_user_memory_wrap(var1, var2, var3, var4, var5, var6, var7, var8);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_read_from_nv_user_memory_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_read_from_nv_user_memory_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_read_from_nv_user_memory_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_select_kanji_character_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_select_kanji_character_mode_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_select_kanji_character_mode_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_cancel_kanji_character_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_cancel_kanji_character_mode_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_cancel_kanji_character_mode_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_pdf417_set_the_number_of_columns_in_the_data_region_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_pdf417_set_the_number_of_columns_in_the_data_region_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_pdf417_set_the_number_of_columns_in_the_data_region_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_pdf417_set_the_number_of_rows_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_pdf417_set_the_number_of_rows_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_pdf417_set_the_number_of_rows_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_pdf417_set_the_width_of_the_module_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_pdf417_set_the_width_of_the_module_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_pdf417_set_the_width_of_the_module_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_pdf417_set_the_row_height_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_pdf417_set_the_row_height_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_pdf417_set_the_row_height_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_pdf417_set_the_error_correction_level_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_pdf417_set_the_error_correction_level_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_pdf417_set_the_error_correction_level_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_pdf417_select_the_options_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_pdf417_select_the_options_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_pdf417_select_the_options_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_pdf417_store_the_data_in_the_symbol_storage_area_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_pdf417_store_the_data_in_the_symbol_storage_area_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_pdf417_store_the_data_in_the_symbol_storage_area_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_pdf417_print_the_symbol_data_in_the_symbol_storage_area_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_pdf417_print_the_symbol_data_in_the_symbol_storage_area_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_pdf417_print_the_symbol_data_in_the_symbol_storage_area_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_pdf417_transmit_the_size_information_of_the_symbol_data_in_the_symbol_storage_area_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_pdf417_transmit_the_size_information_of_the_symbol_data_in_the_symbol_storage_area_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_pdf417_transmit_the_size_information_of_the_symbol_data_in_the_symbol_storage_area_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_qr_select_the_model_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_qr_select_the_model_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_qr_select_the_model_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_qr_set_the_size_of_module_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_qr_set_the_size_of_module_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_qr_set_the_size_of_module_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_qr_select_the_error_correction_level_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_qr_select_the_error_correction_level_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_qr_select_the_error_correction_level_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_qr_store_the_data_in_the_symbol_storage_area_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_qr_store_the_data_in_the_symbol_storage_area_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_qr_store_the_data_in_the_symbol_storage_area_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_qr_print_the_symbol_data_mpt_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte var4 = (byte) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                byte var5 = (byte) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int var7 = (int) ((Map<String, Object>) args).get("var7");
                // jsonable arg
                int[] var8 = (int[]) ((Map<String, Object>) args).get("var8");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_qr_print_the_symbol_data_mpt_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_qr_print_the_symbol_data_mpt_wrap(var1, var2, var3, var4, var5, var6, var7, var8);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_qr_print_the_symbol_data_in_the_symbol_storage_area_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_qr_print_the_symbol_data_in_the_symbol_storage_area_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_qr_print_the_symbol_data_in_the_symbol_storage_area_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_qr_transmit_the_size_information_of_the_symbol_data_in_the_symbol_storage_area_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_qr_transmit_the_size_information_of_the_symbol_data_in_the_symbol_storage_area_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_qr_transmit_the_size_information_of_the_symbol_data_in_the_symbol_storage_area_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_feed_paper_to_the_label_peeling_position_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_feed_paper_to_the_label_peeling_position_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_feed_paper_to_the_label_peeling_position_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_feed_paper_to_the_cutting_position_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_feed_paper_to_the_cutting_position_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_feed_paper_to_the_cutting_position_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_feed_paper_to_the_print_starting_position_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_feed_paper_to_the_print_starting_position_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_feed_paper_to_the_print_starting_position_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_goto_next_label_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_goto_next_label_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_goto_next_label_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_set_1track_card_reader_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_set_1track_card_reader_mode_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_set_1track_card_reader_mode_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_set_2track_card_reader_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_set_2track_card_reader_mode_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_set_2track_card_reader_mode_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_set_1_2track_card_reader_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_set_1_2track_card_reader_mode_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_set_1_2track_card_reader_mode_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_set_123track_card_reader_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_set_123track_card_reader_mode_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_set_123track_card_reader_mode_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_set_3track_card_reader_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_set_3track_card_reader_mode_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_set_3track_card_reader_mode_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_cancel_track_card_reader_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_cancel_track_card_reader_mode_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_cancel_track_card_reader_mode_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_selecting_mode_of_reading_smart_card_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_selecting_mode_of_reading_smart_card_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_selecting_mode_of_reading_smart_card_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_selecting_mode_of_operate_smart_card_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_selecting_mode_of_operate_smart_card_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_selecting_mode_of_operate_smart_card_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_get_random_data_from_smart_card_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_get_random_data_from_smart_card_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_get_random_data_from_smart_card_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_cancel_the_mode_of_read_smart_card_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_cancel_the_mode_of_read_smart_card_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_cancel_the_mode_of_read_smart_card_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_smart_card_select_file_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_smart_card_select_file_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_smart_card_select_file_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_smart_card_get_response_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_smart_card_get_response_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_smart_card_get_response_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_smart_card_read_record_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte var4 = (byte) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int var6 = (int) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int[] var7 = (int[]) ((Map<String, Object>) args).get("var7");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_smart_card_read_record_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_smart_card_read_record_wrap(var1, var2, var3, var4, var5, var6, var7);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_eh_reset_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_eh_reset_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_eh_reset_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_eh_set_default_configuration_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_eh_set_default_configuration_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_eh_set_default_configuration_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_eh_set_encryption_type_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_eh_set_encryption_type_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_eh_set_encryption_type_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_eh_request_attestation_data_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_eh_request_attestation_data_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_eh_request_attestation_data_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_eh_send_attestation_data_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte var3 = (byte) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_eh_send_attestation_data_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_eh_send_attestation_data_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_eh_enable_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_eh_enable_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_eh_enable_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_eh_return_all_track_data_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_eh_return_all_track_data_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_eh_return_all_track_data_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_eh_set_encryption_all_track_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_eh_set_encryption_all_track_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_eh_set_encryption_all_track_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_eh_set_encryption_mode_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte var2 = (byte) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_eh_set_encryption_mode_wrap(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_eh_set_encryption_mode_wrap(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_draw_background_grid_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_draw_background_grid_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_draw_background_grid_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_exit_draw_background_grid_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_exit_draw_background_grid_wrap(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_exit_draw_background_grid_wrap(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmds_find_raster_imgdata_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int[] var7 = (int[]) ((Map<String, Object>) args).get("var7");
                // jsonable arg
                int[] var8 = (int[]) ((Map<String, Object>) args).get("var8");
                // jsonable arg
                int[] var9 = (int[]) ((Map<String, Object>) args).get("var9");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmds_find_raster_imgdata_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmds_find_raster_imgdata_wrap(var1, var2, var3, var4, var5, var6, var7, var8, var9);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_helper_cmd::hprt_cmd_transmit_status", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int[] var3 = (int[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_helper_cmd ref = (HPRTAndroidSDKA300.hprt_printer_helper_cmd) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_helper_cmd@" + refId + "::hprt_cmd_transmit_status(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_cmd_transmit_status(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.Tools::packPerBytes", (args, methodResult) -> {
                // args
                // jsonable arg
                List<byte[]> var0 = (List<byte[]>) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.Tools::packPerBytes(" + var0 + var1 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = HPRTAndroidSDKA300.Tools.packPerBytes(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.Tools::byteListToByteArray", (args, methodResult) -> {
                // args
                // jsonable arg
                List<Byte> var0 = (List<Byte>) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.Tools::byteListToByteArray(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = HPRTAndroidSDKA300.Tools.byteListToByteArray(new ArrayList(var0));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.Tools::intTo4Bytes", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.Tools::intTo4Bytes(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = HPRTAndroidSDKA300.Tools.intTo4Bytes(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.Tools::crc32__Uint8List__int", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.Tools::crc32(" + var0 + var1 + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = HPRTAndroidSDKA300.Tools.crc32(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.Tools::crc32__int__Uint8List__int", (args, methodResult) -> {
                // args
                // jsonable arg
                long var0 = (long) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.Tools::crc32(" + var0 + var2 + var3 + ")");
                }
            
                // invoke native method
                long result;
                try {
                    result = HPRTAndroidSDKA300.Tools.crc32(var0, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.LogUlit::writeFileToSDCard__Uint8List__String__String__bool__bool", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                boolean var3 = (boolean) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                boolean var4 = (boolean) ((Map<String, Object>) args).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.LogUlit::writeFileToSDCard(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                try {
                    HPRTAndroidSDKA300.LogUlit.writeFileToSDCard(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.LogUlit::writeFileToSDCard__Uint8List", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.LogUlit::writeFileToSDCard(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    HPRTAndroidSDKA300.LogUlit.writeFileToSDCard(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::IsBLEType", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.HPRTPrinterHelper ref = (HPRTAndroidSDKA300.HPRTPrinterHelper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper@" + refId + "::IsBLEType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.IsBLEType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::setSelf", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::setSelf(" + "" + ")");
                }
            
                // invoke native method
                try {
                    HPRTAndroidSDKA300.HPRTPrinterHelper.setSelf();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::papertype_CPCL", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::papertype_CPCL(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    HPRTAndroidSDKA300.HPRTPrinterHelper.papertype_CPCL(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::papertype_CPCL_TWO", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::papertype_CPCL_TWO(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    HPRTAndroidSDKA300.HPRTPrinterHelper.papertype_CPCL_TWO(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::printAreaSize", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::printAreaSize(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.printAreaSize(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Print", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Print(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Print();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PoPrint", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PoPrint(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PoPrint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Encoding", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Encoding(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Encoding(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::BackFeed", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::BackFeed(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.BackFeed(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Form", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Form(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Form();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Note", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Note(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Note(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Abort", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Abort(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Abort();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Text", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                String var5 = (String) ((Map<String, Object>) args).get("var5");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Text(" + var0 + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Text(var0, var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Concat", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                List<String> var3 = (List<String>) ((Map<String, Object>) args).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Concat(" + var0 + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Concat(var0, var1, var2, var3.toArray(new String[var3.size()]));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::ML", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::ML(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.ML(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::ENDML", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::ENDML(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.ENDML();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Count", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Count(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Count(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::SetMag", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::SetMag(" + var0 + var1 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.SetMag(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Align", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Align(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Align(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Barcode", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                String var5 = (String) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                String var6 = (String) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                boolean var7 = (boolean) ((Map<String, Object>) args).get("var7");
                // jsonable arg
                String var8 = (String) ((Map<String, Object>) args).get("var8");
                // jsonable arg
                String var9 = (String) ((Map<String, Object>) args).get("var9");
                // jsonable arg
                String var10 = (String) ((Map<String, Object>) args).get("var10");
                // jsonable arg
                String var11 = (String) ((Map<String, Object>) args).get("var11");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Barcode(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + var10 + var11 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Barcode(var0, var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PrintQR", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                String var5 = (String) ((Map<String, Object>) args).get("var5");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PrintQR(" + var0 + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PrintQR(var0, var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PrintPDF417", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                String var5 = (String) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                String var6 = (String) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                String var7 = (String) ((Map<String, Object>) args).get("var7");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PrintPDF417(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + var7 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PrintPDF417(var0, var1, var2, var3, var4, var5, var6, var7);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Box", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Box(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Box(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Line", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Line(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Line(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::InverseLine", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::InverseLine(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.InverseLine(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Expanded__String__String__String", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Expanded(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Expanded(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Expanded__String__String__android_graphics_Bitmap__int", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // ref arg
                android.graphics.Bitmap var2 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Expanded(" + var0 + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Expanded(var0, var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::printText", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::printText(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.printText(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Contrast", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Contrast(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Contrast(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Speed", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Speed(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Speed(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::SetSp", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::SetSp(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.SetSp(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Prefeed", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Prefeed(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Prefeed(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Postfeed", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Postfeed(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Postfeed(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Country", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Country(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Country(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Beep", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Beep(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Beep(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Underline", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var0 = (boolean) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Underline(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Underline(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Wait", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Wait(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Wait(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PageWidth", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PageWidth(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PageWidth(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Setlf", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Setlf(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Setlf(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Setlp", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Setlp(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Setlp(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::RowSetBold", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::RowSetBold(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.RowSetBold(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::RowSetX", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::RowSetX(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.RowSetX(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PrintData", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PrintData(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PrintData(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::SetBold", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::SetBold(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.SetBold(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::getstatus", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::getstatus(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.getstatus();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::AutLine", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                boolean var4 = (boolean) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                boolean var5 = (boolean) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                String var6 = (String) ((Map<String, Object>) args).get("var6");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::AutLine(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.AutLine(var0, var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::AutCenter", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                boolean var5 = (boolean) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                String var6 = (String) ((Map<String, Object>) args).get("var6");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::AutCenter(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.AutCenter(var0, var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PrintTextCPCL", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                boolean var6 = (boolean) ((Map<String, Object>) args).get("var6");
                // jsonable arg
                int var7 = (int) ((Map<String, Object>) args).get("var7");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PrintTextCPCL(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + var7 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PrintTextCPCL(var0, var1, var2, var3, var4, var5, var6, var7);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::ReverseFeed", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::ReverseFeed(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.ReverseFeed(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::WriteData", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::WriteData(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.WriteData(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::ReadData", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::ReadData(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.ReadData(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::GetPrinterVersion", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::GetPrinterVersion(" + var0 + ")");
                }
            
                // invoke native method
                byte[] result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.GetPrinterVersion(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PortType", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PortType(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PortType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::IsOpened", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::IsOpened(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.IsOpened();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PortOpen__String", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PortOpen(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PortOpen(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PortClose", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PortClose(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PortClose();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PrintBinaryFile", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PrintBinaryFile(" + var0 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PrintBinaryFile(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::openEndStatic", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var0 = (boolean) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::openEndStatic(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    HPRTAndroidSDKA300.HPRTPrinterHelper.openEndStatic(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::getEndStatus", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::getEndStatus(" + var0 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.getEndStatus(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::getPrintName", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::getPrintName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.getPrintName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::getPrintModel", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::getPrintModel(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.getPrintModel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::getPrintID", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::getPrintID(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.getPrintID();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::bytetoString", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::bytetoString(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.bytetoString(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::bytetohex", (args, methodResult) -> {
                // args
                // jsonable arg
                byte[] var0 = (byte[]) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::bytetohex(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.bytetohex(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::logcat", (args, methodResult) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) args).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::logcat(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    HPRTAndroidSDKA300.HPRTPrinterHelper.logcat(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::printBitmap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // ref arg
                android.graphics.Bitmap var2 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var2"));
                // jsonable arg
                boolean var3 = (boolean) ((Map<String, Object>) args).get("var3");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::printBitmap(" + var0 + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    HPRTAndroidSDKA300.HPRTPrinterHelper.printBitmap(var0, var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::Tobitmap", (args, methodResult) -> {
                // args
                // ref arg
                android.graphics.Bitmap var0 = (android.graphics.Bitmap) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) args).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::Tobitmap(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                android.graphics.Bitmap result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.Tobitmap(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = result.hashCode();
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::PrintBackground", (args, methodResult) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) args).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) args).get("var4");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::PrintBackground(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.PrintBackground(var0, var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.HPRTPrinterHelper::getPrintSN", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.HPRTPrinterHelper::getPrintSN(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = HPRTAndroidSDKA300.HPRTPrinterHelper.getPrintSN();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_model::hprt_printer_model_get_info_by_name_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int[] var2 = (int[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int[] var3 = (int[]) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_model ref = (HPRTAndroidSDKA300.hprt_printer_model) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_model@" + refId + "::hprt_printer_model_get_info_by_name_wrap(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_printer_model_get_info_by_name_wrap(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_model::hprt_printer_model_name_get_property_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int[] var3 = (int[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_model ref = (HPRTAndroidSDKA300.hprt_printer_model) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_model@" + refId + "::hprt_printer_model_name_get_property_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_printer_model_name_get_property_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_model::hprt_printer_model_id_get_property_wrap", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int[] var3 = (int[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) args).get("var5");
                // jsonable arg
                int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_model ref = (HPRTAndroidSDKA300.hprt_printer_model) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_model@" + refId + "::hprt_printer_model_id_get_property_wrap(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_printer_model_id_get_property_wrap(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_model::hprt_printer_model_get_info_by_name", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int[] var2 = (int[]) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int[] var3 = (int[]) ((Map<String, Object>) args).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_model ref = (HPRTAndroidSDKA300.hprt_printer_model) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_model@" + refId + "::hprt_printer_model_get_info_by_name(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_printer_model_get_info_by_name(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_model::hprt_printer_model_name_get_property", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int[] var3 = (int[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_model ref = (HPRTAndroidSDKA300.hprt_printer_model) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_model@" + refId + "::hprt_printer_model_name_get_property(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_printer_model_name_get_property(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.hprt_printer_model::hprt_printer_model_id_get_property", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
                // jsonable arg
                int[] var3 = (int[]) ((Map<String, Object>) args).get("var3");
                // jsonable arg
                byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                // jsonable arg
                int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                HPRTAndroidSDKA300.hprt_printer_model ref = (HPRTAndroidSDKA300.hprt_printer_model) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: HPRTAndroidSDKA300.hprt_printer_model@" + refId + "::hprt_printer_model_id_get_property(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.hprt_printer_model_id_get_property(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_selftest_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_selftest(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_size_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int var5 = (int) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_size(var1, var2, var3, var4, var5, var6);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_gap_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int var5 = (int) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_gap(var1, var2, var3, var4, var5, var6);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_bline_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int var5 = (int) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_bline(var1, var2, var3, var4, var5, var6);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_offset_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int var4 = (int) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_offset(var1, var2, var3, var4, var5);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_speed_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int var4 = (int) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_speed(var1, var2, var3, var4, var5);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_density_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int var4 = (int) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_density(var1, var2, var3, var4, var5);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_direction_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int var4 = (int) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_direction(var1, var2, var3, var4, var5);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_reference_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int var5 = (int) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_reference(var1, var2, var3, var4, var5, var6);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_codepage_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int var4 = (int) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_codepage(var1, var2, var3, var4, var5);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_cls_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_cls(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_feed_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int var4 = (int) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_feed(var1, var2, var3, var4, var5);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_formfeed_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_formfeed(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_home_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_home(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_print_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int var5 = (int) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_print(var1, var2, var3, var4, var5, var6);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_sound_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int var5 = (int) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    int[] var6 = (int[]) ((Map<String, Object>) args).get("var6");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_sound(var1, var2, var3, var4, var5, var6);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_cut_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_cut(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_set_tear_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int var4 = (int) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_set_tear(var1, var2, var3, var4, var5);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_limitfeed_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int var4 = (int) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    int[] var5 = (int[]) ((Map<String, Object>) args).get("var5");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_limitfeed(var1, var2, var3, var4, var5);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_bar_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    int var7 = (int) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    int[] var8 = (int[]) ((Map<String, Object>) args).get("var8");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_bar(var1, var2, var3, var4, var5, var6, var7, var8);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_barcode_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    byte[] var7 = (byte[]) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    byte[] var8 = (byte[]) ((Map<String, Object>) args).get("var8");
                    // jsonable arg
                    byte[] var9 = (byte[]) ((Map<String, Object>) args).get("var9");
                    // jsonable arg
                    byte[] var10 = (byte[]) ((Map<String, Object>) args).get("var10");
                    // jsonable arg
                    byte[] var11 = (byte[]) ((Map<String, Object>) args).get("var11");
                    // jsonable arg
                    int var12 = (int) ((Map<String, Object>) args).get("var12");
                    // jsonable arg
                    int[] var13 = (int[]) ((Map<String, Object>) args).get("var13");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_barcode(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11, var12, var13);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_bitmap_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    byte[] var7 = (byte[]) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    byte[] var8 = (byte[]) ((Map<String, Object>) args).get("var8");
                    // jsonable arg
                    int var9 = (int) ((Map<String, Object>) args).get("var9");
                    // jsonable arg
                    int[] var10 = (int[]) ((Map<String, Object>) args).get("var10");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_bitmap(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_box_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    byte[] var7 = (byte[]) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    int var8 = (int) ((Map<String, Object>) args).get("var8");
                    // jsonable arg
                    int[] var9 = (int[]) ((Map<String, Object>) args).get("var9");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_box(var1, var2, var3, var4, var5, var6, var7, var8, var9);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_erase_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    int var7 = (int) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    int[] var8 = (int[]) ((Map<String, Object>) args).get("var8");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_erase(var1, var2, var3, var4, var5, var6, var7, var8);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_dmatrix_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    byte[] var7 = (byte[]) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    byte[] var8 = (byte[]) ((Map<String, Object>) args).get("var8");
                    // jsonable arg
                    byte[] var9 = (byte[]) ((Map<String, Object>) args).get("var9");
                    // jsonable arg
                    byte[] var10 = (byte[]) ((Map<String, Object>) args).get("var10");
                    // jsonable arg
                    int var11 = (int) ((Map<String, Object>) args).get("var11");
                    // jsonable arg
                    int[] var12 = (int[]) ((Map<String, Object>) args).get("var12");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_dmatrix(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11, var12);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_maxicode_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    byte[] var7 = (byte[]) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    byte[] var8 = (byte[]) ((Map<String, Object>) args).get("var8");
                    // jsonable arg
                    byte[] var9 = (byte[]) ((Map<String, Object>) args).get("var9");
                    // jsonable arg
                    byte[] var10 = (byte[]) ((Map<String, Object>) args).get("var10");
                    // jsonable arg
                    int var11 = (int) ((Map<String, Object>) args).get("var11");
                    // jsonable arg
                    int[] var12 = (int[]) ((Map<String, Object>) args).get("var12");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_maxicode(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11, var12);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_pdf417_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    byte[] var7 = (byte[]) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    byte[] var8 = (byte[]) ((Map<String, Object>) args).get("var8");
                    // jsonable arg
                    int var9 = (int) ((Map<String, Object>) args).get("var9");
                    // jsonable arg
                    int[] var10 = (int[]) ((Map<String, Object>) args).get("var10");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_pdf417(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_qrcode_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    byte[] var7 = (byte[]) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    byte[] var8 = (byte[]) ((Map<String, Object>) args).get("var8");
                    // jsonable arg
                    byte[] var9 = (byte[]) ((Map<String, Object>) args).get("var9");
                    // jsonable arg
                    byte[] var10 = (byte[]) ((Map<String, Object>) args).get("var10");
                    // jsonable arg
                    byte[] var11 = (byte[]) ((Map<String, Object>) args).get("var11");
                    // jsonable arg
                    int var12 = (int) ((Map<String, Object>) args).get("var12");
                    // jsonable arg
                    int[] var13 = (int[]) ((Map<String, Object>) args).get("var13");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_qrcode(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11, var12, var13);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_putbmp_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    int var6 = (int) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    int[] var7 = (int[]) ((Map<String, Object>) args).get("var7");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_putbmp(var1, var2, var3, var4, var5, var6, var7);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_putpcx_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    int var6 = (int) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    int[] var7 = (int[]) ((Map<String, Object>) args).get("var7");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_putpcx(var1, var2, var3, var4, var5, var6, var7);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_reverse_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    int var7 = (int) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    int[] var8 = (int[]) ((Map<String, Object>) args).get("var8");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_reverse(var1, var2, var3, var4, var5, var6, var7, var8);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_text_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    byte[] var3 = (byte[]) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    byte[] var4 = (byte[]) ((Map<String, Object>) args).get("var4");
                    // jsonable arg
                    byte[] var5 = (byte[]) ((Map<String, Object>) args).get("var5");
                    // jsonable arg
                    byte[] var6 = (byte[]) ((Map<String, Object>) args).get("var6");
                    // jsonable arg
                    byte[] var7 = (byte[]) ((Map<String, Object>) args).get("var7");
                    // jsonable arg
                    byte[] var8 = (byte[]) ((Map<String, Object>) args).get("var8");
                    // jsonable arg
                    byte[] var9 = (byte[]) ((Map<String, Object>) args).get("var9");
                    // jsonable arg
                    int var10 = (int) ((Map<String, Object>) args).get("var10");
                    // jsonable arg
                    int[] var11 = (int[]) ((Map<String, Object>) args).get("var11");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_text(var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_esc_status_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_esc_status(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_esc_reset_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_esc_reset(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_inquires_free_memory_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_inquires_free_memory(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_inquires_model_name_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_inquires_model_name(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("HPRTAndroidSDKA300.androidsdk_tspl::hprt_cmd_tspl_inquires_memory_files_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int i = 0; i < ((List<Map<String, Object>>) argsBatch).size(); i++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(i);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) args).get("var1");
                    // jsonable arg
                    byte[] var2 = (byte[]) ((Map<String, Object>) args).get("var2");
                    // jsonable arg
                    int var3 = (int) ((Map<String, Object>) args).get("var3");
                    // jsonable arg
                    int[] var4 = (int[]) ((Map<String, Object>) args).get("var4");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) args).get("refId");
                    HPRTAndroidSDKA300.androidsdk_tspl ref = (HPRTAndroidSDKA300.androidsdk_tspl) getHEAP().get(refId);
            
                    // invoke native method
                    int result;
                    try {
                        result = ref.hprt_cmd_tspl_inquires_memory_files(var1, var2, var3, var4);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        methodResult.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
        }};
    }
}
